#!/bin/bash

set_START() {
    local dummy
    read START dummy < /proc/uptime
}

get_ELAPS() {
    local dummy
    read END dummy < /proc/uptime
    let ELAPS=${END/./}0-${START/./}0
    START=$END
}

if [ -z "$1" ]; then
    echo
    echo usage: $0 network-interface
    echo
    echo e.g. $0 eth0
    echo
    exit
fi
IF=$1

set_START

ethtool -S $1 1>/dev/null 2>/dev/null
R1=`cat /sys/class/net/$1/statistics/rx_bytes`
T1=`cat /sys/class/net/$1/statistics/tx_bytes`
R1P=`cat /sys/class/net/$1/statistics/rx_packets`
T1P=`cat /sys/class/net/$1/statistics/tx_packets`

while true
do
    sleep 1
    ethtool -S $1 1>/dev/null 2>/dev/null
    R2=`cat /sys/class/net/$1/statistics/rx_bytes`
    T2=`cat /sys/class/net/$1/statistics/tx_bytes`
    R2P=`cat /sys/class/net/$1/statistics/rx_packets`
    T2P=`cat /sys/class/net/$1/statistics/tx_packets`

    get_ELAPS
 
    TBPS=`expr $T2 - $T1`
    RBPS=`expr $R2 - $R1`
    TBPSP=`expr $T2P - $T1P`
    RBPSP=`expr $R2P - $R1P`

    TBPS=`expr $TBPS \* 1000 / $ELAPS`
    RBPS=`expr $RBPS \* 1000 / $ELAPS`
    TBPSP=`expr $TBPSP \* 1000 / $ELAPS`
    RBPSP=`expr $RBPSP \* 1000 / $ELAPS`

    TKBPS=`expr $TBPS \* 8 / 1000 / 1000`
    RKBPS=`expr $RBPS \* 8 / 1000 / 1000`
    TKBPSP=`expr $TBPSP / 1000`
    RKBPSP=`expr $RBPSP / 1000`

    T1=$T2
    R1=$R2
    T1P=$T2P
    R1P=$R2P

    echo "$1:  tx: $TKBPS Mbps  rx: $RKBPS Mbps  txpps: $TKBPSP kpps  rxpps: $RKBPSP kpps"
done

